apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-sf-deployment
spec:
  selector:
    matchLabels:
      app: nginx-sf
  replicas: 3
  template:
    metadata:
      labels:
        app: nginx-sf
    spec:
      containers:
      - name: nginx-sf
        image: nginx:1.21.1-alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-sf-config
          mountPath: "/etc/nginx/nginx.conf"
          subPath: nginx.conf
        - name: auth-basic
          mountPath: "/etc/nginx/.httpasswd"
          subPath: .httpasswd   
      volumes:
      - name: nginx-sf-config
        configMap:
          name: nginx-sf-config
      - name: auth-basic
        secret:
          secretName: auth-basic       
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-sf-config
data:
  nginx.conf: |
    user nginx;
    worker_processes  1;
    events {
        worker_connections  10240;
    }
    http {
        server {
            listen       80;
            server_name  localhost;
            location / {
                auth_basic "Administratorâ€™s Area";
                auth_basic_user_file /etc/nginx/.htpasswd;
                root   /usr/share/nginx/html;
                index  index.html index.htm;
            }
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: sf-webserver
spec:
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  selector:
    app: nginx-sf
---
apiVersion: v1
kind: Secret
metadata:
  name: auth-basic
type: Opaque
stringData:
  .httpasswd: user1:{SHA}44rSFJQ9qtHWTBAvrsKd5K/p2j0=
